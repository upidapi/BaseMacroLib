import ctypes
from time import sleep
from ctypes import (
    POINTER,
    byref,
    c_ulong,
    c_ulonglong,
    c_int,
    c_char,
)

from ctypes.wintypes import (
    DWORD,
    WORD,
    BOOL,
    BYTE,
    USHORT,
    ULONG,
    WCHAR,
    HANDLE
)

from Main.BluetoothKey import SYSTEMTIME, BLUETOOTH_DEVICE_INFO, BLUETOOTH_ADDRESS
from Main.CWinTypes import Bluetooth
from Main.Core import RStructure


ctypes.HRESULT.__str__ = lambda self: bin(self.value)[3:].zfill(32)


BTH_ADDR = c_ulonglong
HDEVINFO = c_int
LPTSTR = POINTER(c_char)
TCHAR = c_char

PBYTE = POINTER(BYTE)

SPDRP_DEVICEDESC = DWORD(0x00000000)
SPDRP_HARDWAREID = DWORD(0x00000001)
SPDRP_COMPATIBLEIDS = DWORD(0x00000002)
SPDRP_UNUSED0 = DWORD(0x00000003)
SPDRP_SERVICE = DWORD(0x00000004)
SPDRP_UNUSED1 = DWORD(0x00000005)
SPDRP_UNUSED2 = DWORD(0x00000006)
SPDRP_CLASS = DWORD(0x00000007)
SPDRP_CLASSGUID = DWORD(0x00000008)
SPDRP_DRIVER = DWORD(0x00000009)
SPDRP_CONFIGFLAGS = DWORD(0x0000000A)
SPDRP_MFG = DWORD(0x0000000B)
SPDRP_FRIENDLYNAME = DWORD(0x0000000C)
SPDRP_LOCATION_INFORMATION = DWORD(0x0000000D)
SPDRP_PHYSICAL_DEVICE_OBJECT_NAME = DWORD(0x0000000E)
SPDRP_CAPABILITIES = DWORD(0x0000000F)
SPDRP_UI_NUMBER = DWORD(0x00000010)
SPDRP_UPPERFILTERS = DWORD(0x00000011)
SPDRP_LOWERFILTERS = DWORD(0x00000012)
SPDRP_BUSTYPEGUID = DWORD(0x00000013)
SPDRP_LEGACYBUSTYPE = DWORD(0x00000014)
SPDRP_BUSNUMBER = DWORD(0x00000015)
SPDRP_ENUMERATOR_NAME = DWORD(0x00000016)
SPDRP_SECURITY = DWORD(0x00000017)
SPDRP_SECURITY_SDS = DWORD(0x00000018)
SPDRP_DEVTYPE = DWORD(0x00000019)
SPDRP_EXCLUSIVE = DWORD(0x0000001A)
SPDRP_CHARACTERISTICS = DWORD(0x0000001B)
SPDRP_ADDRESS = DWORD(0x0000001C)
SPDRP_UI_NUMBER_DESC_FORMAT = DWORD(0x0000001D)
SPDRP_DEVICE_POWER_DATA = DWORD(0x0000001E)
SPDRP_REMOVAL_POLICY = DWORD(0x0000001F)
SPDRP_REMOVAL_POLICY_HW_DEFAULT = DWORD(0x00000020)
SPDRP_REMOVAL_POLICY_OVERRIDE = DWORD(0x00000021)
SPDRP_INSTALL_STATE = DWORD(0x00000022)
SPDRP_LOCATION_PATHS = DWORD(0x00000023)

ERROR_INSUFFICIENT_BUFFER = 0x7A
ERROR_INVALID_DATA = 0xD
ERROR_SUCCESS = 0x0
ERROR_INVALID_FUNCTION = 0x1
ERROR_FILE_NOT_FOUND = 0x2
ERROR_PATH_NOT_FOUND = 0x3
ERROR_NO_MORE_ITEMS = 0x103


class GUID(RStructure):
    _fields_ = [
        ("Data1", DWORD),
        ("Data2", WORD),
        ("Data3", WORD),
        ("Data4", BYTE * 8)
    ]


# from virtualbox sourcecode (devpropdef.h)
DEVPROPGUID = GUID
DEVPROPID = ULONG


class DEVPROPKEY(RStructure):
    _fields_ = [
        ("fmtid", DEVPROPGUID),
        ("pid", DEVPROPID)]


PDEVPROPKEY = POINTER(DEVPROPKEY)

GUID_DEVCLASS_BLUETOOTH = GUID(
    Data1=0xE0CBF06C,
    Data2=0xCD8B,
    Data3=0x4647,
    Data4=(BYTE * 8).from_buffer_copy(
        bytearray([
            0xBB, 0x8A, 0x26, 0x3B, 0x43, 0xF0, 0xF9, 0x74
        ])
    )
)

GUID_BTHPORT_DEVICE_INTERFACE = GUID(
    Data1=0x0850302A,
    Data2=0xB344,
    Data3=0x4FDA,
    Data4=(BYTE * 8).from_buffer_copy(
        bytearray([
            0x9B, 0xE9, 0x90, 0x57, 0x6B, 0x8D, 0x46, 0xF0
        ])
    )
)

DIGCF_PRESENT = 0x02
DIGCF_DEVINTERFACE = 0x10

GENERIC_READ = 0x8000000
GENERIC_WRITE = 0x4000000

FILE_SHARE_READ = 0x01
FILE_SHARE_WRITE = 0x02

OPEN_EXISTING = 0x03

FILE_FLAG_OVERLAPPED = 0x4000000

INVALID_HANDLE_VALUE = 0xffffffff

BLUETOOTH_GATT_FLAG_NONE = 0x0


BT = ctypes.windll.BluetoothAPIs
SAPI = ctypes.windll.Setupapi
WBAse = ctypes.windll.Kernel32

GetLastError = WBAse.GetLastError


class BLUETOOTH_FIND_RADIO_PARAMS(RStructure):
    _fields_ = [
        ("dwSize", DWORD)]


ret_hd = HANDLE()
BT.BluetoothFindFirstRadio(
    byref(BLUETOOTH_FIND_RADIO_PARAMS(
        ctypes.sizeof(BLUETOOTH_FIND_RADIO_PARAMS)
    )),
    byref(ret_hd)
)


bt_info = BLUETOOTH_DEVICE_INFO(
    dwSize=ctypes.sizeof(BLUETOOTH_DEVICE_INFO),
    Address=BLUETOOTH_ADDRESS(
        ullLong=189665926611306
    )
)

BT.BluetoothGetDeviceInfo(
    ret_hd,
    byref(bt_info)
)

print(bt_info)



